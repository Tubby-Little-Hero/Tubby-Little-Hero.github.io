<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JAVA基础</title>
      <link href="/2025/07/21/JAVA%E5%85%A5%E9%97%A8/"/>
      <url>/2025/07/21/JAVA%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-基本语法详细教程"><a href="#Java-基本语法详细教程" class="headerlink" title="Java 基本语法详细教程"></a>Java 基本语法详细教程</h1><p>Java 是一种面向对象的编程语言，具有简单、可移植、安全等特性。下面我将详细介绍 Java 的基本语法。</p><h2 id="1-Java-程序结构"><a href="#1-Java-程序结构" class="headerlink" title="1. Java 程序结构"></a>1. Java 程序结构</h2><p>一个最简单的 Java 程序如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="comment">// 主方法，程序入口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 输出语句</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>public class HelloWorld</code>：定义一个公共类，类名必须与文件名一致</li><li><code>public static void main(String[] args)</code>：主方法，程序执行的入口</li><li><code>System.out.println()</code>：输出语句</li></ul><h2 id="2-基本数据类型"><a href="#2-基本数据类型" class="headerlink" title="2. 基本数据类型"></a>2. 基本数据类型</h2><p>Java 有 8 种基本数据类型：</p><table><thead><tr><th>数据类型</th><th>大小</th><th>范围</th><th>默认值</th></tr></thead><tbody><tr><td>byte</td><td>8位</td><td>-128到127</td><td>0</td></tr><tr><td>short</td><td>16位</td><td>-32,768到32,767</td><td>0</td></tr><tr><td>int</td><td>32位</td><td>-2^31到2^31-1</td><td>0</td></tr><tr><td>long</td><td>64位</td><td>-2^63到2^63-1</td><td>0L</td></tr><tr><td>float</td><td>32位</td><td>IEEE 754浮点数</td><td>0.0f</td></tr><tr><td>double</td><td>64位</td><td>IEEE 754浮点数</td><td>0.0d</td></tr><tr><td>char</td><td>16位</td><td>Unicode字符</td><td>‘\u0000’</td></tr><tr><td>boolean</td><td>1位</td><td>true&#x2F;false</td><td>false</td></tr></tbody></table><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">25</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">price</span> <span class="operator">=</span> <span class="number">19.99</span>;</span><br><span class="line"><span class="type">char</span> <span class="variable">grade</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">isJavaFun</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h2 id="3-变量与常量"><a href="#3-变量与常量" class="headerlink" title="3. 变量与常量"></a>3. 变量与常量</h2><h3 id="变量声明与初始化"><a href="#变量声明与初始化" class="headerlink" title="变量声明与初始化"></a>变量声明与初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明变量</span></span><br><span class="line"><span class="type">int</span> count;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化变量</span></span><br><span class="line">count = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明并初始化</span></span><br><span class="line"><span class="type">double</span> <span class="variable">pi</span> <span class="operator">=</span> <span class="number">3.14159</span>;</span><br></pre></td></tr></table></figure><h3 id="常量（使用-final-关键字）"><a href="#常量（使用-final-关键字）" class="headerlink" title="常量（使用 final 关键字）"></a>常量（使用 final 关键字）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.1415926</span>;</span><br><span class="line"><span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_VALUE</span> <span class="operator">=</span> <span class="number">100</span>;</span><br></pre></td></tr></table></figure><h2 id="4-运算符"><a href="#4-运算符" class="headerlink" title="4. 运算符"></a>4. 运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>, b = <span class="number">3</span>;</span><br><span class="line">System.out.println(a + b); <span class="comment">// 13</span></span><br><span class="line">System.out.println(a - b); <span class="comment">// 7</span></span><br><span class="line">System.out.println(a * b); <span class="comment">// 30</span></span><br><span class="line">System.out.println(a / b); <span class="comment">// 3 (整数除法)</span></span><br><span class="line">System.out.println(a % b); <span class="comment">// 1 (取余)</span></span><br></pre></td></tr></table></figure><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(a &gt; b);  <span class="comment">// true</span></span><br><span class="line">System.out.println(a == b); <span class="comment">// false</span></span><br><span class="line">System.out.println(a != b); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">x</span> <span class="operator">=</span> <span class="literal">true</span>, y = <span class="literal">false</span>;</span><br><span class="line">System.out.println(x &amp;&amp; y); <span class="comment">// false</span></span><br><span class="line">System.out.println(x || y); <span class="comment">// true</span></span><br><span class="line">System.out.println(!x);     <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">c += <span class="number">3</span>; <span class="comment">// 等同于 c = c + 3</span></span><br><span class="line">System.out.println(c); <span class="comment">// 8</span></span><br></pre></td></tr></table></figure><h2 id="5-控制结构"><a href="#5-控制结构" class="headerlink" title="5. 控制结构"></a>5. 控制结构</h2><h3 id="if-else-语句"><a href="#if-else-语句" class="headerlink" title="if-else 语句"></a>if-else 语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> <span class="number">85</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt;= <span class="number">90</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;良好&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch-语句"><a href="#switch-语句" class="headerlink" title="switch 语句"></a>switch 语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">day</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">String dayName;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (day) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        dayName = <span class="string">&quot;星期一&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        dayName = <span class="string">&quot;星期二&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        dayName = <span class="string">&quot;星期三&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        dayName = <span class="string">&quot;未知&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(dayName); <span class="comment">// 星期三</span></span><br></pre></td></tr></table></figure><h3 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;i = &quot;</span> + i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (j &lt; <span class="number">5</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;j = &quot;</span> + j);</span><br><span class="line">    j++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while-循环"><a href="#do-while-循环" class="headerlink" title="do-while 循环"></a>do-while 循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;k = &quot;</span> + k);</span><br><span class="line">    k++;</span><br><span class="line">&#125; <span class="keyword">while</span> (k &lt; <span class="number">5</span>);</span><br></pre></td></tr></table></figure><h2 id="6-数组"><a href="#6-数组" class="headerlink" title="6. 数组"></a>6. 数组</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明并初始化数组</span></span><br><span class="line"><span class="type">int</span>[] numbers = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问数组元素</span></span><br><span class="line">System.out.println(numbers[<span class="number">0</span>]); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">    System.out.println(numbers[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增强for循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> num : numbers) &#123;</span><br><span class="line">    System.out.println(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二维数组</span></span><br><span class="line"><span class="type">int</span>[][] matrix = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;,</span><br><span class="line">    &#123;<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问元素</span></span><br><span class="line">System.out.println(matrix[<span class="number">1</span>][<span class="number">2</span>]); <span class="comment">// 6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历二维数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; matrix.length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; matrix[i].length; j++) &#123;</span><br><span class="line">        System.out.print(matrix[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-方法（函数）"><a href="#7-方法（函数）" class="headerlink" title="7. 方法（函数）"></a>7. 方法（函数）</h2><h3 id="方法定义"><a href="#方法定义" class="headerlink" title="方法定义"></a>方法定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 无返回值方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">greet</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hello, &quot;</span> + name + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有返回值方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法重载</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">double</span> a, <span class="type">double</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">greet(<span class="string">&quot;Alice&quot;</span>); <span class="comment">// 调用无返回值方法</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(<span class="number">5</span>, <span class="number">3</span>); <span class="comment">// 调用有返回值方法</span></span><br><span class="line">System.out.println(sum); <span class="comment">// 8</span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="variable">dSum</span> <span class="operator">=</span> add(<span class="number">2.5</span>, <span class="number">3.7</span>);</span><br><span class="line">System.out.println(dSum); <span class="comment">// 6.2</span></span><br></pre></td></tr></table></figure><h2 id="8-类和对象"><a href="#8-类和对象" class="headerlink" title="8. 类和对象"></a>8. 类和对象</h2><h3 id="类定义"><a href="#类定义" class="headerlink" title="类定义"></a>类定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">// 字段（属性）</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">introduce</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我叫&quot;</span> + name + <span class="string">&quot;，今年&quot;</span> + age + <span class="string">&quot;岁。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;张三&quot;</span>, <span class="number">25</span>);</span><br><span class="line">person1.introduce(); <span class="comment">// 我叫张三，今年25岁。</span></span><br></pre></td></tr></table></figure><h2 id="9-包和导入"><a href="#9-包和导入" class="headerlink" title="9. 包和导入"></a>9. 包和导入</h2><h3 id="创建包"><a href="#创建包" class="headerlink" title="创建包"></a>创建包</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">    <span class="comment">// 类内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="导入其他包中的类"><a href="#导入其他包中的类" class="headerlink" title="导入其他包中的类"></a>导入其他包中的类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.*; <span class="comment">// 导入java.util包中的所有类</span></span><br></pre></td></tr></table></figure><h2 id="10-异常处理"><a href="#10-异常处理" class="headerlink" title="10. 异常处理"></a>10. 异常处理</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">0</span>; <span class="comment">// 除以零会抛出ArithmeticException</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (ArithmeticException e) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;除数不能为零&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;这段代码总是会执行&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-输入输出"><a href="#11-输入输出" class="headerlink" title="11. 输入输出"></a>11. 输入输出</h2><h3 id="控制台输入"><a href="#控制台输入" class="headerlink" title="控制台输入"></a>控制台输入</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.print(<span class="string">&quot;请输入您的姓名: &quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">System.out.print(<span class="string">&quot;请输入您的年龄: &quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">System.out.println(<span class="string">&quot;您好，&quot;</span> + name + <span class="string">&quot;! 您今年&quot;</span> + age + <span class="string">&quot;岁。&quot;</span>);</span><br><span class="line">scanner.close();</span><br></pre></td></tr></table></figure><h3 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.print(<span class="string">&quot;不换行输出&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;换行输出&quot;</span>);</span><br><span class="line">System.out.printf(<span class="string">&quot;格式化输出: %s %d %.2f&quot;</span>, <span class="string">&quot;字符串&quot;</span>, <span class="number">100</span>, <span class="number">3.14159</span>);</span><br></pre></td></tr></table></figure><h2 id="12-字符串操作"><a href="#12-字符串操作" class="headerlink" title="12. 字符串操作"></a>12. 字符串操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;World&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串连接</span></span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> str1 + <span class="string">&quot; &quot;</span> + str2;</span><br><span class="line">System.out.println(result); <span class="comment">// Hello World</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串长度</span></span><br><span class="line">System.out.println(result.length()); <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串比较</span></span><br><span class="line">System.out.println(str1.equals(<span class="string">&quot;Hello&quot;</span>)); <span class="comment">// true</span></span><br><span class="line">System.out.println(str1.equalsIgnoreCase(<span class="string">&quot;hello&quot;</span>)); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 子字符串</span></span><br><span class="line">System.out.println(result.substring(<span class="number">0</span>, <span class="number">5</span>)); <span class="comment">// Hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串分割</span></span><br><span class="line">String[] parts = result.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (String part : parts) &#123;</span><br><span class="line">    System.out.println(part);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上是 Java 基本语法的详细内容。掌握这些基础知识后，你可以进一步学习 Java 的面向对象特性、集合框架、多线程等高级特性。</p><h1 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h1><h2 id="最大值：Math-max-x-y"><a href="#最大值：Math-max-x-y" class="headerlink" title="最大值：Math.max(x,y)"></a>最大值：Math.max(<em>x</em>,<em>y</em>)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.max(<span class="number">5</span>, <span class="number">10</span>);<span class="comment">//找5，10的最大值</span></span><br></pre></td></tr></table></figure><h2 id="最小值：Math-min-x-y"><a href="#最小值：Math-min-x-y" class="headerlink" title="最小值：Math.min(x,y)"></a>最小值：Math.min(<em>x</em>,<em>y</em>)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.min(<span class="number">5</span>, <span class="number">10</span>);<span class="comment">//找5，10的最小值</span></span><br></pre></td></tr></table></figure><h2 id="平方根：Math-sqrt-x"><a href="#平方根：Math-sqrt-x" class="headerlink" title="平方根：Math.sqrt(x)"></a>平方根：Math.sqrt(<em>x</em>)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt(<span class="number">64</span>);<span class="comment">//64的平方根</span></span><br></pre></td></tr></table></figure><h2 id="绝对值：Math-abs-x"><a href="#绝对值：Math-abs-x" class="headerlink" title="绝对值：Math.abs(x)"></a>绝对值：Math.abs(<em>x</em>)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.abs(-<span class="number">4.7</span>);</span><br></pre></td></tr></table></figure><h2 id="生成随机数：Random-Numbers"><a href="#生成随机数：Random-Numbers" class="headerlink" title="生成随机数：Random Numbers"></a>生成随机数：Random Numbers</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">randomNum</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random() * <span class="number">101</span>);  <span class="comment">// 0 到 100</span></span><br></pre></td></tr></table></figure><p>完整的[数学公式](<a href="https://www.w3school.com.cn/java/java_ref_math.asp">Java Math 方法</a>)</p>]]></content>
      
      
      <categories>
          
          <category> Java基本语法详细教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA方法（函数）</title>
      <link href="/2025/07/21/Java%E6%96%B9%E6%B3%95(%E5%87%BD%E6%95%B0)/"/>
      <url>/2025/07/21/Java%E6%96%B9%E6%B3%95(%E5%87%BD%E6%95%B0)/</url>
      
        <content type="html"><![CDATA[<h1 id="Java方法（函数）详细教程"><a href="#Java方法（函数）详细教程" class="headerlink" title="Java方法（函数）详细教程"></a>Java方法（函数）详细教程</h1><h2 id="1-方法的基本概念"><a href="#1-方法的基本概念" class="headerlink" title="1. 方法的基本概念"></a>1. 方法的基本概念</h2><p>方法是Java中执行特定任务的代码块，也称为函数。方法的主要目的是提高代码的复用性和可维护性。</p><h3 id="方法的优点："><a href="#方法的优点：" class="headerlink" title="方法的优点："></a>方法的优点：</h3><ul><li>代码复用：避免重复编写相同的代码</li><li>模块化：将复杂问题分解为小模块</li><li>易于维护：修改只需在一个地方进行</li></ul><h2 id="2-方法的定义"><a href="#2-方法的定义" class="headerlink" title="2. 方法的定义"></a>2. 方法的定义</h2><p>方法的基本语法结构：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[访问修饰符] [<span class="keyword">static</span>] 返回类型 方法名([参数列表]) &#123;</span><br><span class="line">    <span class="comment">// 方法体</span></span><br><span class="line">    [<span class="keyword">return</span> 返回值;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> a + b;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-方法的组成部分"><a href="#3-方法的组成部分" class="headerlink" title="3. 方法的组成部分"></a>3. 方法的组成部分</h2><h3 id="3-1-访问修饰符"><a href="#3-1-访问修饰符" class="headerlink" title="3.1 访问修饰符"></a>3.1 访问修饰符</h3><ul><li><code>public</code>: 公开访问</li><li><code>private</code>: 仅类内可访问</li><li><code>protected</code>: 同包和子类可访问</li><li>(默认): 同包可访问</li></ul><h3 id="3-2-static关键字"><a href="#3-2-static关键字" class="headerlink" title="3.2 static关键字"></a>3.2 static关键字</h3><ul><li>静态方法：属于类，可直接通过类名调用</li><li>非静态方法：属于对象，需要通过对象实例调用</li></ul><h3 id="3-3-返回类型"><a href="#3-3-返回类型" class="headerlink" title="3.3 返回类型"></a>3.3 返回类型</h3><ul><li>基本数据类型：int, double, boolean等</li><li>引用类型：String, 自定义类等</li><li><code>void</code>: 无返回值</li></ul><h3 id="3-4-方法名"><a href="#3-4-方法名" class="headerlink" title="3.4 方法名"></a>3.4 方法名</h3><ul><li>遵循标识符命名规则</li><li>建议使用动词或动词短语</li></ul><h3 id="3-5-参数列表"><a href="#3-5-参数列表" class="headerlink" title="3.5 参数列表"></a>3.5 参数列表</h3><ul><li>可以包含零个或多个参数</li><li>每个参数包括类型和名称</li><li>多个参数用逗号分隔</li></ul><h3 id="3-6-方法体"><a href="#3-6-方法体" class="headerlink" title="3.6 方法体"></a>3.6 方法体</h3><ul><li>包含实现功能的代码</li><li>可以有局部变量</li><li>可以有控制结构</li></ul><h3 id="3-7-return语句"><a href="#3-7-return语句" class="headerlink" title="3.7 return语句"></a>3.7 return语句</h3><ul><li>用于返回方法的结果</li><li>void方法可以省略return或使用<code>return;</code>提前结束方法</li></ul><h2 id="4-方法的调用"><a href="#4-方法的调用" class="headerlink" title="4. 方法的调用"></a>4. 方法的调用</h2><h3 id="4-1-静态方法调用"><a href="#4-1-静态方法调用" class="headerlink" title="4.1 静态方法调用"></a>4.1 静态方法调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ClassName.methodName(arguments);</span><br></pre></td></tr></table></figure><h3 id="4-2-非静态方法调用"><a href="#4-2-非静态方法调用" class="headerlink" title="4.2 非静态方法调用"></a>4.2 非静态方法调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ObjectName.methodName(arguments);</span><br></pre></td></tr></table></figure><h3 id="4-3-方法调用的示例"><a href="#4-3-方法调用的示例" class="headerlink" title="4.3 方法调用的示例"></a>4.3 方法调用的示例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 调用静态方法</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> MathUtils.add(<span class="number">5</span>, <span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;5 + 3 = &quot;</span> + result);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 调用非静态方法</span></span><br><span class="line">        <span class="type">MethodDemo</span> <span class="variable">demo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MethodDemo</span>();</span><br><span class="line">        demo.greet(<span class="string">&quot;Alice&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">greet</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, &quot;</span> + name + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MathUtils</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-方法参数"><a href="#5-方法参数" class="headerlink" title="5. 方法参数"></a>5. 方法参数</h2><h3 id="5-1-形参和实参"><a href="#5-1-形参和实参" class="headerlink" title="5.1 形参和实参"></a>5.1 形参和实参</h3><ul><li>形参：方法定义时声明的参数</li><li>实参：方法调用时传入的实际值</li></ul><h3 id="5-2-参数传递机制"><a href="#5-2-参数传递机制" class="headerlink" title="5.2 参数传递机制"></a>5.2 参数传递机制</h3><ul><li>基本数据类型：值传递（传递值的副本）</li><li>引用类型：值传递（传递引用的副本）</li></ul><h3 id="5-3-可变参数（Varargs）"><a href="#5-3-可变参数（Varargs）" class="headerlink" title="5.3 可变参数（Varargs）"></a>5.3 可变参数（Varargs）</h3><p>Java支持可变数量的参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span>... numbers)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num : numbers) &#123;</span><br><span class="line">        total += num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);       <span class="comment">// 返回6</span></span><br><span class="line">sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>); <span class="comment">// 返回15</span></span><br></pre></td></tr></table></figure><h2 id="6-方法重载（Overloading）"><a href="#6-方法重载（Overloading）" class="headerlink" title="6. 方法重载（Overloading）"></a>6. 方法重载（Overloading）</h2><p>在同一个类中，允许有多个同名方法，只要它们的参数列表不同。</p><h3 id="重载规则："><a href="#重载规则：" class="headerlink" title="重载规则："></a>重载规则：</h3><ol><li>方法名必须相同</li><li>参数列表必须不同（类型、数量或顺序）</li><li>返回类型可以不同（但不能仅返回类型不同）</li><li>访问修饰符可以不同</li></ol><h3 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Calculator</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">double</span> a, <span class="type">double</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b + c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-递归方法"><a href="#7-递归方法" class="headerlink" title="7. 递归方法"></a>7. 递归方法</h2><p>方法调用自身称为递归。</p><h3 id="示例：计算阶乘"><a href="#示例：计算阶乘" class="headerlink" title="示例：计算阶乘"></a>示例：计算阶乘</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">factorial</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> n * factorial(n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归注意事项："><a href="#递归注意事项：" class="headerlink" title="递归注意事项："></a>递归注意事项：</h3><ol><li>必须有终止条件</li><li>每次递归应使问题规模减小</li><li>递归深度过大会导致栈溢出</li></ol><h2 id="8-方法的文档注释"><a href="#8-方法的文档注释" class="headerlink" title="8. 方法的文档注释"></a>8. 方法的文档注释</h2><p>良好的文档注释可以提高代码可读性：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两个整数的和</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> a 第一个加数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> b 第二个加数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 两个参数的和</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException 如果参数为负数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> <span class="keyword">throws</span> IllegalArgumentException &#123;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; <span class="number">0</span> || b &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;参数不能为负数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-方法的最佳实践"><a href="#9-方法的最佳实践" class="headerlink" title="9. 方法的最佳实践"></a>9. 方法的最佳实践</h2><ol><li><strong>单一职责原则</strong>：一个方法只做一件事</li><li><strong>合理命名</strong>：方法名应准确描述其功能</li><li><strong>控制方法长度</strong>：一般不超过50行</li><li><strong>减少参数数量</strong>：最好不超过5个</li><li><strong>避免副作用</strong>：除非必要，不要修改传入的参数</li><li><strong>适当使用异常</strong>：处理错误情况</li></ol><h2 id="10-示例代码"><a href="#10-示例代码" class="headerlink" title="10. 示例代码"></a>10. 示例代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodExamples</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 调用各种方法示例</span></span><br><span class="line">        printHello();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> addNumbers(<span class="number">5</span>, <span class="number">7</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;5 + 7 = &quot;</span> + sum);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;Max of 10 and 20: &quot;</span> + findMax(<span class="number">10</span>, <span class="number">20</span>));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;Factorial of 5: &quot;</span> + factorial(<span class="number">5</span>));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;Average: &quot;</span> + calculateAverage(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 无参数无返回值方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printHello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 带参数有返回值方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">addNumbers</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 返回较大值的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">findMax</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 递归方法计算阶乘</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">factorial</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n * factorial(n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 可变参数方法计算平均值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">calculateAverage</span><span class="params">(<span class="type">double</span>... numbers)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">double</span> num : numbers) &#123;</span><br><span class="line">            sum += num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum / numbers.length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Java方法是构建程序的基本模块，掌握方法的定义、使用和各种特性对于编写高质量的Java代码至关重要。通过合理使用方法，可以使代码更加模块化、可读性更强、更易于维护。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php核心语法</title>
      <link href="/2025/07/21/Java%E6%95%B0%E7%BB%84/"/>
      <url>/2025/07/21/Java%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-数组详细教程"><a href="#Java-数组详细教程" class="headerlink" title="Java 数组详细教程"></a>Java 数组详细教程</h1><p>数组是Java中存储固定大小同类型元素的数据结构。下面我将详细介绍Java数组的各个方面。</p><h2 id="一、数组基础"><a href="#一、数组基础" class="headerlink" title="一、数组基础"></a>一、数组基础</h2><h3 id="1-数组声明"><a href="#1-数组声明" class="headerlink" title="1. 数组声明"></a>1. 数组声明</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明一个整型数组</span></span><br><span class="line"><span class="type">int</span>[] intArray;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明一个字符串数组</span></span><br><span class="line">String[] stringArray;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以使用C风格的声明方式（不推荐）</span></span><br><span class="line"><span class="type">int</span> intArray2[];</span><br></pre></td></tr></table></figure><h3 id="2-数组初始化"><a href="#2-数组初始化" class="headerlink" title="2. 数组初始化"></a>2. 数组初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 静态初始化 - 直接指定元素</span></span><br><span class="line"><span class="type">int</span>[] numbers = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态初始化 - 指定长度后再赋值</span></span><br><span class="line"><span class="type">int</span>[] numbers2 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">numbers2[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">numbers2[<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认初始化 - 元素有默认值</span></span><br><span class="line"><span class="type">double</span>[] doubles = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">3</span>]; <span class="comment">// 默认值为0.0</span></span><br><span class="line"><span class="type">boolean</span>[] flags = <span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">2</span>]; <span class="comment">// 默认值为false</span></span><br><span class="line">String[] names = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">3</span>]; <span class="comment">// 默认值为null</span></span><br></pre></td></tr></table></figure><h3 id="3-数组访问"><a href="#3-数组访问" class="headerlink" title="3. 数组访问"></a>3. 数组访问</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问元素（索引从0开始）</span></span><br><span class="line">System.out.println(arr[<span class="number">0</span>]); <span class="comment">// 10</span></span><br><span class="line">System.out.println(arr[<span class="number">4</span>]); <span class="comment">// 50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改元素</span></span><br><span class="line">arr[<span class="number">2</span>] = <span class="number">35</span>;</span><br><span class="line">System.out.println(arr[<span class="number">2</span>]); <span class="comment">// 35</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数组长度</span></span><br><span class="line">System.out.println(arr.length); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure><h2 id="二、数组遍历"><a href="#二、数组遍历" class="headerlink" title="二、数组遍历"></a>二、数组遍历</h2><h3 id="1-普通for循环"><a href="#1-普通for循环" class="headerlink" title="1. 普通for循环"></a>1. 普通for循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] numbers = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;索引 &quot;</span> + i + <span class="string">&quot;: &quot;</span> + numbers[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-增强for循环（for-each）"><a href="#2-增强for循环（for-each）" class="headerlink" title="2. 增强for循环（for-each）"></a>2. 增强for循环（for-each）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> num : numbers) &#123;</span><br><span class="line">    System.out.println(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-使用Arrays-toString"><a href="#3-使用Arrays-toString" class="headerlink" title="3. 使用Arrays.toString()"></a>3. 使用Arrays.toString()</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(Arrays.toString(numbers));</span><br><span class="line"><span class="comment">// 输出: [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h2 id="三、多维数组"><a href="#三、多维数组" class="headerlink" title="三、多维数组"></a>三、多维数组</h2><h3 id="1-二维数组声明和初始化"><a href="#1-二维数组声明和初始化" class="headerlink" title="1. 二维数组声明和初始化"></a>1. 二维数组声明和初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 静态初始化</span></span><br><span class="line"><span class="type">int</span>[][] matrix = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;,</span><br><span class="line">    &#123;<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态初始化</span></span><br><span class="line"><span class="type">int</span>[][] matrix2 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>][<span class="number">4</span>]; <span class="comment">// 3行4列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不规则数组</span></span><br><span class="line"><span class="type">int</span>[][] irregularArray = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;,</span><br><span class="line">    &#123;<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="2-二维数组遍历"><a href="#2-二维数组遍历" class="headerlink" title="2. 二维数组遍历"></a>2. 二维数组遍历</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 普通for循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; matrix.length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; matrix[i].length; j++) &#123;</span><br><span class="line">        System.out.print(matrix[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增强for循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span>[] row : matrix) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num : row) &#123;</span><br><span class="line">        System.out.print(num + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、数组常用操作"><a href="#四、数组常用操作" class="headerlink" title="四、数组常用操作"></a>四、数组常用操作</h2><h3 id="1-数组复制"><a href="#1-数组复制" class="headerlink" title="1. 数组复制"></a>1. 数组复制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] source = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法1: System.arraycopy()</span></span><br><span class="line"><span class="type">int</span>[] dest1 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">System.arraycopy(source, <span class="number">0</span>, dest1, <span class="number">0</span>, source.length);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法2: Arrays.copyOf()</span></span><br><span class="line"><span class="type">int</span>[] dest2 = Arrays.copyOf(source, source.length);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法3: clone()</span></span><br><span class="line"><span class="type">int</span>[] dest3 = source.clone();</span><br></pre></td></tr></table></figure><h3 id="2-数组排序"><a href="#2-数组排序" class="headerlink" title="2. 数组排序"></a>2. 数组排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] numbers = &#123;<span class="number">5</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 升序排序</span></span><br><span class="line">Arrays.sort(numbers);</span><br><span class="line">System.out.println(Arrays.toString(numbers)); <span class="comment">// [1, 3, 5, 7, 9]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 降序排序（使用Comparator）</span></span><br><span class="line">Integer[] nums = &#123;<span class="number">5</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>&#125;;</span><br><span class="line">Arrays.sort(nums, Collections.reverseOrder());</span><br><span class="line">System.out.println(Arrays.toString(nums)); <span class="comment">// [9, 7, 5, 3, 1]</span></span><br></pre></td></tr></table></figure><h3 id="3-数组搜索"><a href="#3-数组搜索" class="headerlink" title="3. 数组搜索"></a>3. 数组搜索</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] sortedArray = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 二分查找（数组必须已排序）</span></span><br><span class="line"><span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> Arrays.binarySearch(sortedArray, <span class="number">5</span>);</span><br><span class="line">System.out.println(index); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><h3 id="4-数组比较"><a href="#4-数组比较" class="headerlink" title="4. 数组比较"></a>4. 数组比较</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] arr2 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] arr3 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">System.out.println(Arrays.equals(arr1, arr2)); <span class="comment">// true</span></span><br><span class="line">System.out.println(Arrays.equals(arr1, arr3)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="5-数组填充"><a href="#5-数组填充" class="headerlink" title="5. 数组填充"></a>5. 数组填充</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">Arrays.fill(arr, <span class="number">10</span>); <span class="comment">// 全部填充为10</span></span><br><span class="line">System.out.println(Arrays.toString(arr)); <span class="comment">// [10, 10, 10, 10, 10]</span></span><br></pre></td></tr></table></figure><h2 id="五、数组与集合转换"><a href="#五、数组与集合转换" class="headerlink" title="五、数组与集合转换"></a>五、数组与集合转换</h2><h3 id="1-数组转List"><a href="#1-数组转List" class="headerlink" title="1. 数组转List"></a>1. 数组转List</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String[] names = &#123;<span class="string">&quot;Alice&quot;</span>, <span class="string">&quot;Bob&quot;</span>, <span class="string">&quot;Charlie&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法1: Arrays.asList()（返回的List大小固定）</span></span><br><span class="line">List&lt;String&gt; nameList = Arrays.asList(names);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法2: 使用ArrayList构造函数（可修改）</span></span><br><span class="line">List&lt;String&gt; nameList2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(Arrays.asList(names));</span><br></pre></td></tr></table></figure><h3 id="2-List转数组"><a href="#2-List转数组" class="headerlink" title="2. List转数组"></a>2. List转数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">list.add(<span class="string">&quot;Apple&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;Banana&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;Orange&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换为Object数组</span></span><br><span class="line">Object[] objArray = list.toArray();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换为特定类型数组</span></span><br><span class="line">String[] strArray = list.toArray(<span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h2 id="六、数组常见问题"><a href="#六、数组常见问题" class="headerlink" title="六、数组常见问题"></a>六、数组常见问题</h2><h3 id="1-数组索引越界"><a href="#1-数组索引越界" class="headerlink" title="1. 数组索引越界"></a>1. 数组索引越界</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">System.out.println(arr[<span class="number">3</span>]); <span class="comment">// ArrayIndexOutOfBoundsException</span></span><br></pre></td></tr></table></figure><h3 id="2-空指针异常"><a href="#2-空指针异常" class="headerlink" title="2. 空指针异常"></a>2. 空指针异常</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = <span class="literal">null</span>;</span><br><span class="line">System.out.println(arr.length); <span class="comment">// NullPointerException</span></span><br></pre></td></tr></table></figure><h3 id="3-数组长度不可变"><a href="#3-数组长度不可变" class="headerlink" title="3. 数组长度不可变"></a>3. 数组长度不可变</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">arr.length = <span class="number">10</span>; <span class="comment">// 编译错误，数组长度不可变</span></span><br></pre></td></tr></table></figure><h2 id="七、实用技巧"><a href="#七、实用技巧" class="headerlink" title="七、实用技巧"></a>七、实用技巧</h2><h3 id="1-数组反转"><a href="#1-数组反转" class="headerlink" title="1. 数组反转"></a>1. 数组反转</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length / <span class="number">2</span>; i++) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">    arr[i] = arr[arr.length - <span class="number">1</span> - i];</span><br><span class="line">    arr[arr.length - <span class="number">1</span> - i] = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(Arrays.toString(arr)); <span class="comment">// [5, 4, 3, 2, 1]</span></span><br></pre></td></tr></table></figure><h3 id="2-查找最大值-最小值"><a href="#2-查找最大值-最小值" class="headerlink" title="2. 查找最大值&#x2F;最小值"></a>2. 查找最大值&#x2F;最小值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] numbers = &#123;<span class="number">5</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> numbers[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> numbers[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> num : numbers) &#123;</span><br><span class="line">    <span class="keyword">if</span> (num &gt; max) max = num;</span><br><span class="line">    <span class="keyword">if</span> (num &lt; min) min = num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;最大值: &quot;</span> + max); <span class="comment">// 9</span></span><br><span class="line">System.out.println(<span class="string">&quot;最小值: &quot;</span> + min); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><h3 id="3-数组去重"><a href="#3-数组去重" class="headerlink" title="3. 数组去重"></a>3. 数组去重</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">Set&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> num : arr) &#123;</span><br><span class="line">    set.add(num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[] uniqueArr = <span class="keyword">new</span> <span class="title class_">int</span>[set.size()];</span><br><span class="line"><span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> num : set) &#123;</span><br><span class="line">    uniqueArr[index++] = num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(Arrays.toString(uniqueArr)); <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA类</title>
      <link href="/2025/07/21/Java%E7%B1%BB/"/>
      <url>/2025/07/21/Java%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="OOP"><a href="#OOP" class="headerlink" title="OOP"></a>OOP</h1><h2 id="什么是面向对象的编程"><a href="#什么是面向对象的编程" class="headerlink" title="什么是面向对象的编程"></a>什么是面向对象的编程</h2><p>OOP表示面向对象的编程</p><p>过程编程是关于编写对数据执行操作的过程或方法，而面向对象编程是关于创建包含数据和方法的对象。</p><p>面向对象编程与过程编程相比有几个优点：</p><ul><li>OOP 更快更容易执行</li><li>OOP 为程序提供了清晰的结构</li><li>OOP 有助于保持 Java 代码干燥（ DRY，”Don’t Repeat Yourself”），并使代码更易于维护、修改和调试</li><li>OOP 使得用更少的代码和更短的开发时间创建完全可重用的应用程序成为可能</li></ul><p>**提示：**DRY 原则旨在减少代码的重复。您应该提取应用程序中通用的代码，然后将它们放在某处并重复使用它们。</p><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><table><thead><tr><th align="center">类<br />水果</th><th align="center">对象<br />苹果</th></tr></thead><tbody><tr><td align="center">类<br />汽车</td><td align="center">对象<br />奥迪</td></tr></tbody></table><h1 id="类-对象"><a href="#类-对象" class="headerlink" title="类&#x2F;对象"></a>类&#x2F;对象</h1><h2 id="创建类"><a href="#创建类" class="headerlink" title="创建类"></a>创建类</h2><p>使用关键字class</p><p>使用变量 x 创建名为 <code>&quot;Main&quot;</code> 的类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h2><p>在 Java 中，对象是从类创建的。我们已经创建了名为 <code>Main</code> 的类，所以现在我们可以使用它来创建对象。</p><p>如需创建 <code>Main</code> 对象，请指定类名，后跟对象名，并使用关键字 <code>new</code>：</p><p>创建名为 “<code>myObj</code>“ 的对象并打印 x 的值：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">    System.out.println(myObj.x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多个对象"><a href="#多个对象" class="headerlink" title="多个对象"></a>多个对象</h2><p>创建两个 Main 对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();  <span class="comment">// 对象 1</span></span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();  <span class="comment">// 对象 2</span></span><br><span class="line">    System.out.println(myObj1.x);</span><br><span class="line">    System.out.println(myObj2.x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用多个类"><a href="#使用多个类" class="headerlink" title="使用多个类"></a>使用多个类</h2><p>可以创建一个类的对象并在另一个类中访问它。这通常用于更好地组织类（一个类拥有所有属性和方法，而另一个类拥有 <code>main()</code> 方法（要执行的代码））。</p><p>请记住，java 的文件名应与类名相匹配。在这个例子中，我们在同一个目录&#x2F;文件夹中创建了两个文件：</p><ul><li>Main.java</li><li>Second.java</li></ul><p>Main.Java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Second.Java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Second</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">    System.out.println(myObj.x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行 Second.java 文件：输出的将是5</p><h1 id="Java类属性"><a href="#Java类属性" class="headerlink" title="Java类属性"></a>Java类属性</h1><h2 id="Java类属性-1"><a href="#Java类属性-1" class="headerlink" title="Java类属性"></a>Java类属性</h2><p>我们在例子中为 <code>x</code> 使用了术语“变量”（如下所示）。它实际上是类的<em>属性</em>。或者你可以说类属性是类中的变量：</p><p>创建一个名为 “<code>Main</code>“ 的类，有两个属性：x 和 y：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">  <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类属性的另一个术语是<em>字段</em>（field）。</p><h2 id="访问属性"><a href="#访问属性" class="headerlink" title="访问属性"></a>访问属性</h2><p>可以通过创建类的对象并使用点语法 (<code>.</code>) 来访问属性：</p><p>下例将创建 <code>Main</code> 类的一个对象，名称为 <code>myObj</code>。我们使用对象上的 <code>x</code> 属性来打印其值：</p><p>创建一个名为 “<code>myObj</code>“ 的对象并打印 <code>x</code> 的值：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">    System.out.println(myObj.x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以修改属性的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">int</span> x;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">    myObj.x = <span class="number">40</span>;</span><br><span class="line">    System.out.println(myObj.x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="comment">//将x的值改为40</span></span><br></pre></td></tr></table></figure><p>覆盖现有的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">    myObj.x = <span class="number">25</span>; <span class="comment">// x 目前是 25</span></span><br><span class="line">    System.out.println(myObj.x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="comment">//将x的值覆盖为25</span></span><br></pre></td></tr></table></figure><p>如果不想覆盖现有值，请将属性声明为 <code>final</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">    myObj.x = <span class="number">25</span>; <span class="comment">// 将产生错误：无法为 final 变量赋值</span></span><br><span class="line">    System.out.println(myObj.x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>final</code> 关键字被称为“修饰符”</p><h2 id="多个对象-1"><a href="#多个对象-1" class="headerlink" title="多个对象"></a>多个对象</h2><p>如果创建一个类的多个对象，则可以更改对象中的属性值，同时不会影响另一个对象中的属性值：</p><p>将 <code>myObj2</code> 中 <code>x</code> 的值更改为 25，并保持 <code>myObj1</code> 中的 <code>x</code> 不变：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();  <span class="comment">// 对象 1</span></span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();  <span class="comment">// 对象 2</span></span><br><span class="line">    myObj2.x = <span class="number">25</span>;</span><br><span class="line">    System.out.println(myObj1.x);  <span class="comment">// 输出 5</span></span><br><span class="line">    System.out.println(myObj2.x);  <span class="comment">// 输出 25</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多重属性"><a href="#多重属性" class="headerlink" title="多重属性"></a>多重属性</h2><p>可以根据需要指定任意数量的属性：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="type">String</span> <span class="variable">fname</span> <span class="operator">=</span> <span class="string">&quot;Bill&quot;</span>;</span><br><span class="line">  <span class="type">String</span> <span class="variable">lname</span> <span class="operator">=</span> <span class="string">&quot;Gates&quot;</span>;</span><br><span class="line">  <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">24</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">    System.out.println(<span class="string">&quot;Name: &quot;</span> + myObj.fname + <span class="string">&quot; &quot;</span> + myObj.lname);</span><br><span class="line">    System.out.println(<span class="string">&quot;Age: &quot;</span> + myObj.age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h1><h2 id="Java类方法"><a href="#Java类方法" class="headerlink" title="Java类方法"></a>Java类方法</h2><p>方法是在类中声明的，并且它们用于执行某些操作：</p><p>在 Main 中创建名为 <code>myMethod()</code> 的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">myMethod</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>myMethod()</code> 在<em>被调用</em>时打印文本（操作）。如需调用方法，请写方法名称，后跟两个括号 <code>()</code> 和一个分号；</p><p>在 <code>main</code> 中，调用 <code>myMethod()</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">myMethod</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    myMethod();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出 &quot;Hello World!&quot;</span></span><br></pre></td></tr></table></figure><h2 id="静态与非静态"><a href="#静态与非静态" class="headerlink" title="静态与非静态"></a>静态与非静态</h2><p>您经常会看到具有 <code>static</code> 或 <code>public</code> 属性和方法的 Java 程序。</p><p>在上面的例子中，我们创建了一个 <code>static</code> 方法，这意味着它可以在不创建类的对象的情况下访问，而 public 不同，它只能被对象访问：</p><p>演示 <code>static</code> 方法和 <code>public</code> <em>方法</em>之间差异的例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="comment">// 静态方法：</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">myStaticMethod</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;无需创建对象即可调用静态方法&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 公共方法：</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myPublicMethod</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;公共方法必须通过创建对象来调用&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 主方法：</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    myStaticMethod(); <span class="comment">// 调用静态方法</span></span><br><span class="line">    <span class="comment">// myPublicMethod(); 这会编译错误</span></span><br><span class="line"></span><br><span class="line">    <span class="type">Main</span> <span class="variable">myObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>(); <span class="comment">// 创建 Main 的对象</span></span><br><span class="line">    myObj.myPublicMethod(); <span class="comment">// 调用对象的公共方法</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用对象访问方法"><a href="#使用对象访问方法" class="headerlink" title="使用对象访问方法"></a>使用对象访问方法</h2><p>创建名为 <code>myCar</code> 的 Car 对象。调用 <code>myCar</code> 对象上的 <code>fullThrottle()</code> 和 <code>speed()</code> 方法，并运行程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建 Main 类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 创建 fullThrottle() 方法</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fullThrottle</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;这辆车正以最快的速度行驶！&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建 speed() 方法并添加参数</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speed</span><span class="params">(<span class="type">int</span> maxSpeed)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;最高速是：&quot;</span> + maxSpeed);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 在 main 中，调用 myCar 对象上的方法</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myCar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();   <span class="comment">// 创建 myCar 对象</span></span><br><span class="line">    myCar.fullThrottle();      <span class="comment">// 调用 fullThrottle() 方法</span></span><br><span class="line">    myCar.speed(<span class="number">200</span>);          <span class="comment">// 调用 speed() 方法</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这辆车正以最快的速度行驶！</span></span><br><span class="line"><span class="comment">// 最高速是：200</span></span><br></pre></td></tr></table></figure><p><strong>例子解释</strong></p><ol><li>我们使用 <code>class</code> 关键字创建了一个自定义的 <code>Main</code> 类。</li><li>我们在 <code>Main</code> 类中创建了 <code>fullThrottle()</code> 和 <code>speed()</code> 方法。</li><li><code>fullThrottle()</code> 方法和 <code>speed()</code> 方法在调用时会打印出一些文本。</li><li><code>speed()</code> 方法接受一个名为 <code>maxSpeed</code> 的 <code>int</code> 参数 - 我们将在 <em>8.</em> 中使用它。</li><li>为了使用 <code>Main</code> 类及其方法，我们需要创建 <code>Main</code> 类的<em>对象</em>。</li><li>然后，转到 <code>main()</code> 方法，您现在知道它是运行程序的内置 Java 方法（执行 main 中的任何代码）。</li><li>通过使用 <code>new</code> 关键字，我们创建了名为 <code>myCar</code> 的对象。</li><li>然后，我们在 <code>myCar</code> 对象上调用 <code>fullThrottle()</code> 和 <code>speed()</code> 方法：使用对象的名称（<code>myCar</code>），后跟一个点（<code>.</code>），后跟方法的名称（<code>fullThrottle();</code> 和 <code>speed(200);</code>)。请注意，我们在 <code>speed()</code> 方法中添加了一个 <code>int</code> 参数 <code>200</code>。</li></ol><p><strong>请记住</strong></p><p>点 (<code>.</code>) 用于访问对象的属性和方法。</p><p>如需在 Java 中调用方法，请写：方法名称，后跟一组括号 <code>()</code>，后跟分号 (<code>;</code>)。</p><p>类必须具有匹配的文件名（<code>Main</code> 和 <em>Main.java</em>）。</p><h2 id="使用多个类-1"><a href="#使用多个类-1" class="headerlink" title="使用多个类"></a>使用多个类</h2><p>就像我们在 <a href="https://www.w3school.com.cn/java/java_classes.asp">类和对象</a> 一章中讲到的那样，创建一个类的对象并在另一个类中访问它是一个很好的做法。</p><p>请记住，java 文件的名称应与类名称匹配。在本例中，我们在同一目录中创建了两个文件：</p><ul><li>Main.java</li><li>Second.java</li></ul><p><strong>Main.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fullThrottle</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;这辆车正以最快的速度行驶！&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speed</span><span class="params">(<span class="type">int</span> maxSpeed)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;最高速是：&quot;</span> + maxSpeed);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Second.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Second</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Main</span> <span class="variable">myCar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();     <span class="comment">// 创建 myCar 对象</span></span><br><span class="line">    myCar.fullThrottle();      <span class="comment">// 调用 fullThrottle() 方法</span></span><br><span class="line">    myCar.speed(<span class="number">200</span>);          <span class="comment">// 调用 speed() 方法</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行 Second.java 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Your Name&gt;java Second</span><br></pre></td></tr></table></figure><p>输出将是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这辆车正以最快的速度行驶！</span><br><span class="line">最高速是：200</span><br></pre></td></tr></table></figure><h1 id="Java构造函数"><a href="#Java构造函数" class="headerlink" title="Java构造函数"></a>Java构造函数</h1>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php数组</title>
      <link href="/2025/07/21/php%E6%95%B0%E7%BB%84/"/>
      <url>/2025/07/21/php%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p>数组是一种特殊的变量，可以在单个名称下保存多个值，您可以通过引用索引号或名称来访问这些值。</p><h2 id="PHP数组类型"><a href="#PHP数组类型" class="headerlink" title="PHP数组类型"></a>PHP数组类型</h2><ul><li>索引数组 ：有数字索引的数组</li><li>关联数组 ： 有命令键的数组</li><li>多维数组 ： 包含一个或多个数组的数组</li></ul><h2 id="数组项"><a href="#数组项" class="headerlink" title="数组项"></a>数组项</h2><p>数组项可以是任何数据类型。</p><p>最常见的是字符串和数字（int, float），但数组项也可以是对象、函数或甚至是数组。</p><p>同一个数组中可以有不同的数据类型。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$myArr</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="number">15</span>, [<span class="string">&quot;apples&quot;</span>, <span class="string">&quot;bananas&quot;</span>], myFunction);</span><br></pre></td></tr></table></figure><h2 id="数组函数"><a href="#数组函数" class="headerlink" title="数组函数"></a>数组函数</h2><p>php数组最强大的地方是处在于内置的数组函数，如count（）函数用于计算数组的项数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">count</span>(<span class="variable">$cars</span>);</span><br></pre></td></tr></table></figure><h2 id="索引数组"><a href="#索引数组" class="headerlink" title="索引数组"></a>索引数组</h2><h3 id="php索引数组"><a href="#php索引数组" class="headerlink" title="php索引数组"></a>php索引数组</h3><p>在索引数组中，每个项目都有一个索引号</p><p>默认情况下，第一个项目的索引是0，第二个项目的索引是1，以此类推</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cars</span>);</span><br><span class="line"><span class="comment">//创建并西安市一个索引数组</span></span><br></pre></td></tr></table></figure><h3 id="访问索引数组"><a href="#访问索引数组" class="headerlink" title="访问索引数组"></a>访问索引数组</h3><p>要访问数组项目，可以引用索引号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//显示第一个数组项目</span></span><br></pre></td></tr></table></figure><h3 id="更改值"><a href="#更改值" class="headerlink" title="更改值"></a>更改值</h3><p>使用索引号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="variable">$cars</span>[<span class="number">2</span>] = <span class="string">&quot;BYD&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cars</span>);</span><br><span class="line"><span class="comment">//更改第三个的值</span></span><br></pre></td></tr></table></figure><h3 id="遍历索引数组"><a href="#遍历索引数组" class="headerlink" title="遍历索引数组"></a>遍历索引数组</h3><p>要遍历并且打印数组的所有值，使用foreach循环</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$cars</span> <span class="keyword">as</span> <span class="variable">$x</span>) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$x</span> &lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示所有数组项目</span></span><br></pre></td></tr></table></figure><h3 id="索引号"><a href="#索引号" class="headerlink" title="索引号"></a>索引号</h3><p>索引数组的键是一个数字，默认情况下，第一个项目是 0，第二个是 1，依此类推，但也有例外。</p><p>新项目将获得下一个索引号，即比现有最高索引高一个。</p><p>因此，如果您有这样一个数组：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span>[<span class="number">0</span>] = <span class="string">&quot;Volvo&quot;</span>;</span><br><span class="line"><span class="variable">$cars</span>[<span class="number">1</span>] = <span class="string">&quot;BMW&quot;</span>;</span><br><span class="line"><span class="variable">$cars</span>[<span class="number">2</span>] = <span class="string">&quot;Audi&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">array_push</span>(<span class="variable">$cars</span>, <span class="string">&quot;BYD&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cars</span>);</span><br></pre></td></tr></table></figure><p>如果您使用 array_push() 函数添加一个新项目，新项目将获得索引 3：</p><p>但是，如果您有一个具有随机索引号的数组，如下所示：</p><p>新项目的索引为15</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span>[<span class="number">5</span>] = <span class="string">&quot;Volvo&quot;</span>;</span><br><span class="line"><span class="variable">$cars</span>[<span class="number">7</span>] = <span class="string">&quot;BMW&quot;</span>;</span><br><span class="line"><span class="variable">$cars</span>[<span class="number">14</span>] = <span class="string">&quot;Audi&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">array_push</span>(<span class="variable">$cars</span>, <span class="string">&quot;BYD&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cars</span>);</span><br></pre></td></tr></table></figure><h2 id="php关联数组"><a href="#php关联数组" class="headerlink" title="php关联数组"></a>php关联数组</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>分配命名键的数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$car</span> = <span class="keyword">array</span>(<span class="string">&quot;brand&quot;</span>=&gt;<span class="string">&quot;Ford&quot;</span>, <span class="string">&quot;model&quot;</span>=&gt;<span class="string">&quot;Mustang&quot;</span>, <span class="string">&quot;year&quot;</span>=&gt;<span class="number">1964</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$car</span>);</span><br></pre></td></tr></table></figure><h3 id="访问关联数组"><a href="#访问关联数组" class="headerlink" title="访问关联数组"></a>访问关联数组</h3><p>引用键名来访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$car</span> = <span class="keyword">array</span>(<span class="string">&quot;brand&quot;</span>=&gt;<span class="string">&quot;Ford&quot;</span>, <span class="string">&quot;model&quot;</span>=&gt;<span class="string">&quot;Mustang&quot;</span>, <span class="string">&quot;year&quot;</span>=&gt;<span class="number">1964</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$car</span>[<span class="string">&quot;model&quot;</span>];</span><br><span class="line"><span class="comment">//显示汽车的型号</span></span><br></pre></td></tr></table></figure><h3 id="更改值-1"><a href="#更改值-1" class="headerlink" title="更改值"></a>更改值</h3><p>也使用键名来更改</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$car</span> = <span class="keyword">array</span>(<span class="string">&quot;brand&quot;</span>=&gt;<span class="string">&quot;Ford&quot;</span>, <span class="string">&quot;model&quot;</span>=&gt;<span class="string">&quot;Mustang&quot;</span>, <span class="string">&quot;year&quot;</span>=&gt;<span class="number">1964</span>);</span><br><span class="line"><span class="variable">$car</span>[<span class="string">&quot;year&quot;</span>] = <span class="number">2024</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$car</span>);</span><br><span class="line"><span class="comment">//更改年份项目</span></span><br></pre></td></tr></table></figure><h3 id="遍历关联数组"><a href="#遍历关联数组" class="headerlink" title="遍历关联数组"></a>遍历关联数组</h3><p>用foreach循环</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$car</span> = <span class="keyword">array</span>(<span class="string">&quot;brand&quot;</span>=&gt;<span class="string">&quot;Ford&quot;</span>, <span class="string">&quot;model&quot;</span>=&gt;<span class="string">&quot;Mustang&quot;</span>, <span class="string">&quot;year&quot;</span>=&gt;<span class="number">1964</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$car</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$x</span>: <span class="subst">$y</span> &lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="php创建数组"><a href="#php创建数组" class="headerlink" title="php创建数组"></a>php创建数组</h2><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><p>使用array（）函数来创建</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br></pre></td></tr></table></figure><p>也可以使用[] 更简洁</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = [<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>];</span><br></pre></td></tr></table></figure><h3 id="数组键"><a href="#数组键" class="headerlink" title="数组键"></a>数组键</h3><p>在创建索引数组时，键会自动给出，从 0 开始，每个项目增加 1，因此上面的数组也可以使用键来创建</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = [</span><br><span class="line">  <span class="number">0</span> =&gt; <span class="string">&quot;Volvo&quot;</span>,</span><br><span class="line">  <span class="number">1</span> =&gt; <span class="string">&quot;BMW&quot;</span>,</span><br><span class="line">  <span class="number">2</span> =&gt;<span class="string">&quot;Audi&quot;</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>如下所示，索引数组与关联数组相同，但关联数组使用名称而不是数字：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$myCar</span> = [</span><br><span class="line">  <span class="string">&quot;brand&quot;</span> =&gt; <span class="string">&quot;BYD&quot;</span>,</span><br><span class="line">  <span class="string">&quot;model&quot;</span> =&gt; <span class="string">&quot;Mustang&quot;</span>,</span><br><span class="line">  <span class="string">&quot;year&quot;</span> =&gt; <span class="number">1964</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="创建空数组"><a href="#创建空数组" class="headerlink" title="创建空数组"></a>创建空数组</h3><p>可以先声明一个空数组，稍后再往后添加项目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = [];</span><br><span class="line"><span class="variable">$cars</span>[<span class="number">0</span>] = <span class="string">&quot;Volvo&quot;</span>;</span><br><span class="line"><span class="variable">$cars</span>[<span class="number">1</span>] = <span class="string">&quot;BMW&quot;</span>;</span><br><span class="line"><span class="variable">$cars</span>[<span class="number">2</span>] = <span class="string">&quot;Audi&quot;</span>;</span><br></pre></td></tr></table></figure><p>对于关联数组也是如此，您可以先声明数组，然后再向其添加项目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$myCar</span> = [];</span><br><span class="line"><span class="variable">$myCar</span>[<span class="string">&quot;brand&quot;</span>] = <span class="string">&quot;BYD&quot;</span>;</span><br><span class="line"><span class="variable">$myCar</span>[<span class="string">&quot;model&quot;</span>] = <span class="string">&quot;Mustang&quot;</span>;</span><br><span class="line"><span class="variable">$myCar</span>[<span class="string">&quot;year&quot;</span>] = <span class="number">1964</span>;</span><br></pre></td></tr></table></figure><h3 id="一些说明补充"><a href="#一些说明补充" class="headerlink" title="一些说明补充"></a>一些说明补充</h3><p><strong>换行符</strong>并不重要，声明数组可以跨越多行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = [</span><br><span class="line">  <span class="string">&quot;Volvo&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BMW&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Audi&quot;</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>最后一个项目的逗号是<strong>允许的</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = [</span><br><span class="line">  <span class="string">&quot;Volvo&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BMW&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Audi&quot;</span>, <span class="comment">//这里的逗号可以加</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>数组见可以混合出现，可以创建<strong>同时</strong>具有索引和命名键的数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$myArr</span> = [];</span><br><span class="line"><span class="variable">$myArr</span>[<span class="number">0</span>] = <span class="string">&quot;apples&quot;</span>;</span><br><span class="line"><span class="variable">$myArr</span>[<span class="number">1</span>] = <span class="string">&quot;bananas&quot;</span>;</span><br><span class="line"><span class="variable">$myArr</span>[<span class="string">&quot;fruit&quot;</span>] = <span class="string">&quot;cherries&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="php访问数组"><a href="#php访问数组" class="headerlink" title="php访问数组"></a>php访问数组</h2><h3 id="访问数组项"><a href="#访问数组项" class="headerlink" title="访问数组项"></a>访问数组项</h3><p>要访问数组项，对于索引数组，您可以引用索引号；对于关联数组，可以引用键名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="number">2</span>];</span><br><span class="line"><span class="comment">//通过索引号来访问一个项</span></span><br><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;brand&quot;</span> =&gt; <span class="string">&quot;BYD&quot;</span>, <span class="string">&quot;model&quot;</span> =&gt; <span class="string">&quot;Mustang&quot;</span>, <span class="string">&quot;year&quot;</span> =&gt; <span class="number">1964</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="string">&quot;year&quot;</span>];</span><br><span class="line"><span class="comment">//通过引用键来访问一个项</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：第一个索引是0 关联数组使用<strong>键名</strong></p><h3 id="双引号和单引号"><a href="#双引号和单引号" class="headerlink" title="双引号和单引号"></a>双引号和单引号</h3><p>在访问数组时都可以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="string">&quot;model&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="string">&#x27;model&#x27;</span>];</span><br></pre></td></tr></table></figure><h3 id="执行函数项"><a href="#执行函数项" class="headerlink" title="执行函数项"></a>执行函数项</h3><p>数组项可以是任何数据类型，包括函数。</p><p>要执行这样的函数，请使用索引号后跟括号 <code>()</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;我来自一个函数！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myArr</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="number">15</span>, myFunction);</span><br><span class="line"></span><br><span class="line"><span class="variable">$myArr</span>[<span class="number">2</span>]();</span><br><span class="line"><span class="comment">//执行一个函数项</span></span><br></pre></td></tr></table></figure><p>关联函数执行函数使用键名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;我来自一个函数！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myArr</span> = <span class="keyword">array</span>(<span class="string">&quot;car&quot;</span> =&gt; <span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;age&quot;</span> =&gt; <span class="number">15</span>, <span class="string">&quot;message&quot;</span> =&gt; myFunction);</span><br><span class="line"></span><br><span class="line"><span class="variable">$myArr</span>[<span class="string">&quot;message&quot;</span>]();</span><br><span class="line"><span class="comment">//执行一个函数</span></span><br></pre></td></tr></table></figure><h2 id="php更新数组项"><a href="#php更新数组项" class="headerlink" title="php更新数组项"></a>php更新数组项</h2><h3 id="更新数组项目"><a href="#更新数组项目" class="headerlink" title="更新数组项目"></a>更新数组项目</h3><p>要更新现有的数组项，对于索引数组，您可以引用索引号；对于关联数组，您可以引用键名。</p><p>将第二个数组项从 “BMW” 更改为 “Ford”：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="variable">$cars</span>[<span class="number">1</span>] = <span class="string">&quot;Ford&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="foreach循环更新数组项"><a href="#foreach循环更新数组项" class="headerlink" title="foreach循环更新数组项"></a>foreach循环更新数组项</h3><p>在 <code>foreach</code> 循环中更改项值时，有不同的技术可以使用。</p><p>一种方法是在赋值中插入 <code>&amp;</code> 字符，按引用分配项值，从而确保在循环内部对数组项所做的任何更改都将应用于原始数组：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$cars</span> <span class="keyword">as</span> &amp;<span class="variable">$x</span>) &#123;</span><br><span class="line">  <span class="variable">$x</span> = <span class="string">&quot;Ford&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$x</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cars</span>);</span><br><span class="line"><span class="comment">//将所有的项“ford”</span></span><br></pre></td></tr></table></figure><p>**注意：**记得在循环后添加 <code>unset()</code> 函数。</p><p>如果没有 <code>unset($x)</code> 函数，<code>$x</code> 变量将保持对最后一个数组项的引用。</p><p>为了演示这一点，请查看在 <code>foreach</code> 循环后更改 <code>$x</code> 的值时会发生什么：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$cars</span> <span class="keyword">as</span> &amp;<span class="variable">$x</span>) &#123;</span><br><span class="line">  <span class="variable">$x</span> = <span class="string">&quot;Ford&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="string">&quot;ice cream&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cars</span>);</span><br><span class="line"><span class="comment">//演示没有使用unset（）函数的后果</span></span><br></pre></td></tr></table></figure><h2 id="php添加数组项"><a href="#php添加数组项" class="headerlink" title="php添加数组项"></a>php添加数组项</h2><h3 id="添加数组项"><a href="#添加数组项" class="headerlink" title="添加数组项"></a>添加数组项</h3><p>要向现有数组中添加项，您可以使用括号 <code>[]</code> 语法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fruits</span> = <span class="keyword">array</span>(<span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Cherry&quot;</span>);</span><br><span class="line"><span class="variable">$fruits</span>[] = <span class="string">&quot;Orange&quot;</span>;</span><br><span class="line"><span class="comment">//向fruits数组添加一个项</span></span><br></pre></td></tr></table></figure><p>xxxxxxxxxx int[] arr &#x3D; {1, 2, 2, 3, 4, 4, 5};​Set<Integer> set &#x3D; new HashSet&lt;&gt;();for (int num : arr) {    set.add(num);}​int[] uniqueArr &#x3D; new int[set.size()];int index &#x3D; 0;for (int num : set) {    uniqueArr[index++] &#x3D; num;}​System.out.println(Arrays.toString(uniqueArr)); &#x2F;&#x2F; [1, 2, 3, 4, 5]Java</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;brand&quot;</span> =&gt; <span class="string">&quot;Ford&quot;</span>, <span class="string">&quot;model&quot;</span> =&gt; <span class="string">&quot;Mustang&quot;</span>);</span><br><span class="line"><span class="variable">$cars</span>[<span class="string">&quot;color&quot;</span>] = <span class="string">&quot;Red&quot;</span>;</span><br><span class="line"><span class="comment">//向cars数组添加一个项</span></span><br></pre></td></tr></table></figure><h3 id="添加多个项"><a href="#添加多个项" class="headerlink" title="添加多个项"></a>添加多个项</h3><p>要向现有数组添加多个项，使用array_push()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fruits</span> = <span class="keyword">array</span>(<span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Cherry&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">array_push</span>(<span class="variable">$fruits</span>, <span class="string">&quot;Orange&quot;</span>, <span class="string">&quot;Kiwi&quot;</span>, <span class="string">&quot;Lemon&quot;</span>);</span><br><span class="line"><span class="comment">//向fruits数组添加三个项</span></span><br></pre></td></tr></table></figure><p>向关联数组添加多个项</p><p>要向现有数组中添加多个项，您可以使用 <code>+=</code> 运算符。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;brand&quot;</span> =&gt; <span class="string">&quot;BYD&quot;</span>, <span class="string">&quot;model&quot;</span> =&gt; <span class="string">&quot;Mustang&quot;</span>);</span><br><span class="line"><span class="variable">$cars</span> += [<span class="string">&quot;color&quot;</span> =&gt; <span class="string">&quot;red&quot;</span>, <span class="string">&quot;year&quot;</span> =&gt; <span class="number">1964</span>];</span><br><span class="line"><span class="comment">//向cars数组添加多个项</span></span><br></pre></td></tr></table></figure><h2 id="php删除数组项"><a href="#php删除数组项" class="headerlink" title="php删除数组项"></a>php删除数组项</h2><h3 id="删除数组项"><a href="#删除数组项" class="headerlink" title="删除数组项"></a>删除数组项</h3><p>要从数组中删除现有项，您可以使用 <code>array_splice()</code> 函数。</p><p>使用 <code>array_splice()</code> 函数时，您需要指定索引（从哪里开始）以及要删除的项目数量。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">array_splice</span>(<span class="variable">$cars</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">//删除第二项</span></span><br></pre></td></tr></table></figure><p>注：删除后数组会自动重新索引，从0开始</p><h3 id="使用unset函数"><a href="#使用unset函数" class="headerlink" title="使用unset函数"></a>使用unset函数</h3><p>您还可以使用 <code>unset()</code> 函数来删除现有的数组项。</p><p><strong>注意：</strong><code>unset()</code> 函数不会重新排列索引，这意味着在删除后，数组将不再包含缺失的索引。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$cars</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="comment">//删除第二项</span></span><br></pre></td></tr></table></figure><h3 id="删除多个数组项"><a href="#删除多个数组项" class="headerlink" title="删除多个数组项"></a>删除多个数组项</h3><p>如需删除多个项目，<code>array_splice()</code> 函数有一个 <em>length</em> 参数，允许您指定要删除的项目数量。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">array_splice</span>(<span class="variable">$cars</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="comment">//从第二项（索引1）开始删除两项</span></span><br></pre></td></tr></table></figure><p><code>unset()</code> 函数接受无限数量的参数，因此可用于删除多个数组项：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$cars</span>[<span class="number">0</span>], <span class="variable">$cars</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="comment">//删除第一项和第二项</span></span><br></pre></td></tr></table></figure><p>删除关联数组里的项，也可以使用unset()函数</p><p>指定要删除项的键</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;brand&quot;</span> =&gt; <span class="string">&quot;Ford&quot;</span>, <span class="string">&quot;model&quot;</span> =&gt; <span class="string">&quot;Mustang&quot;</span>, <span class="string">&quot;year&quot;</span> =&gt; <span class="number">1964</span>);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$cars</span>[<span class="string">&quot;model&quot;</span>]);</span><br><span class="line"><span class="comment">///删除“model”</span></span><br></pre></td></tr></table></figure><h3 id="使用array-diff函数"><a href="#使用array-diff函数" class="headerlink" title="使用array_diff函数"></a>使用array_diff函数</h3><p>也可以用来删除关联数组里的项</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;brand&quot;</span> =&gt; <span class="string">&quot;Ford&quot;</span>, <span class="string">&quot;model&quot;</span> =&gt; <span class="string">&quot;Mustang&quot;</span>, <span class="string">&quot;year&quot;</span> =&gt; <span class="number">1964</span>);</span><br><span class="line"><span class="variable">$newarray</span> = <span class="title function_ invoke__">array_diff</span>(<span class="variable">$cars</span>, [<span class="string">&quot;Mustang&quot;</span>, <span class="number">1964</span>]);</span><br><span class="line"><span class="comment">//相当于创建一个不含有“Mustang”和“1964”的关联数组</span></span><br></pre></td></tr></table></figure><p>注：array_diff函数()将值作为参数而不是键</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>**array_pop()**函数删除最后一个</p><p><strong>array_shift</strong>函数删除第一个项</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">array_pop</span>(<span class="variable">$cars</span>);</span><br><span class="line"><span class="comment">//删除最后一项</span></span><br><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">array_shift</span>(<span class="variable">$cars</span>);</span><br><span class="line">删除第一项</span><br></pre></td></tr></table></figure><h2 id="php数组排序"><a href="#php数组排序" class="headerlink" title="php数组排序"></a>php数组排序</h2><h3 id="升序排序"><a href="#升序排序" class="headerlink" title="升序排序"></a>升序排序</h3><p>sort()函数  asort()函数 ksot()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">sort</span>(<span class="variable">$cars</span>);</span><br><span class="line"><span class="comment">//按字母顺序升序排列</span></span><br><span class="line"><span class="variable">$age</span> = <span class="keyword">array</span>(<span class="string">&quot;Bill&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>, <span class="string">&quot;Steve&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>, <span class="string">&quot;Elon&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">asort</span>(<span class="variable">$age</span>);</span><br><span class="line"><span class="comment">//根据值对关联数组升序</span></span><br><span class="line"><span class="variable">$age</span> = <span class="keyword">array</span>(<span class="string">&quot;Bill&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>, <span class="string">&quot;Steve&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>, <span class="string">&quot;Elon&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">ksort</span>(<span class="variable">$age</span>);</span><br><span class="line"><span class="comment">//根据键对关联数组升序</span></span><br></pre></td></tr></table></figure><h3 id="降序排列"><a href="#降序排列" class="headerlink" title="降序排列"></a>降序排列</h3><p>rsort()函数 arsort()函数 krsort()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>, <span class="string">&quot;Audi&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">rsort</span>(<span class="variable">$cars</span>);</span><br><span class="line"><span class="comment">//按字母顺序降序排列</span></span><br><span class="line"><span class="variable">$age</span> = <span class="keyword">array</span>(<span class="string">&quot;Bill&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>, <span class="string">&quot;Steve&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>, <span class="string">&quot;Elon&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">arsort</span>(<span class="variable">$age</span>);</span><br><span class="line"><span class="comment">//根据值对关联数组升序</span></span><br><span class="line"><span class="variable">$age</span> = <span class="keyword">array</span>(<span class="string">&quot;Bill&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>, <span class="string">&quot;Steve&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>, <span class="string">&quot;Elon&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">krsort</span>(<span class="variable">$age</span>);</span><br><span class="line"><span class="comment">//根据键对关联数组降序</span></span><br></pre></td></tr></table></figure><h2 id="php多维数组"><a href="#php多维数组" class="headerlink" title="php多维数组"></a>php多维数组</h2><h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><p>多维数组是一个包含一个或多个数组的数组。</p><p>PHP 支持深度为二、三、四、五或更多层的多维数组。然而，对于大多数人来说，深度超过三层的数组很难管理。</p><p>数组的维度表示选择元素所需的索引数量。</p><ul><li>对于二维数组，您需要两个索引来选择元素</li><li>对于三维数组，您需要三个索引来选择元素</li></ul><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p>二维数组是数组的数组（三维数组是数组的数组的数组）。</p><p>请看以下表格</p><table><thead><tr><th align="left">名称</th><th>库存</th><th>已售</th></tr></thead><tbody><tr><td align="left">Volvo</td><td>22</td><td>18</td></tr><tr><td align="left">BMW</td><td>15</td><td>13</td></tr><tr><td align="left">Ford</td><td>5</td><td>2</td></tr><tr><td align="left">Land Rover</td><td>17</td><td>15</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cars</span> = <span class="keyword">array</span> (</span><br><span class="line">  <span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="number">22</span>,<span class="number">18</span>),</span><br><span class="line">  <span class="keyword">array</span>(<span class="string">&quot;BMW&quot;</span>,<span class="number">15</span>,<span class="number">13</span>),</span><br><span class="line">  <span class="keyword">array</span>(<span class="string">&quot;Ford&quot;</span>,<span class="number">5</span>,<span class="number">2</span>),</span><br><span class="line">  <span class="keyword">array</span>(<span class="string">&quot;Land Rover&quot;</span>,<span class="number">17</span>,<span class="number">15</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">//将上述表格存在一个二维数组</span></span><br></pre></td></tr></table></figure><p>现在二维的 $cars 数组包含四个数组，并且它有两个索引：行和列。</p><p>要访问 $cars 数组的元素，我们必须指向两个索引（行和列）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="number">0</span>][<span class="number">0</span>].<span class="string">&quot;: 库存：&quot;</span>.<span class="variable">$cars</span>[<span class="number">0</span>][<span class="number">1</span>].<span class="string">&quot;, 已售：&quot;</span>.<span class="variable">$cars</span>[<span class="number">0</span>][<span class="number">2</span>].<span class="string">&quot;.&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="number">1</span>][<span class="number">0</span>].<span class="string">&quot;: 库存：&quot;</span>.<span class="variable">$cars</span>[<span class="number">1</span>][<span class="number">1</span>].<span class="string">&quot;, 已售：&quot;</span>.<span class="variable">$cars</span>[<span class="number">1</span>][<span class="number">2</span>].<span class="string">&quot;.&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="number">2</span>][<span class="number">0</span>].<span class="string">&quot;: 库存：&quot;</span>.<span class="variable">$cars</span>[<span class="number">2</span>][<span class="number">1</span>].<span class="string">&quot;, 已售：&quot;</span>.<span class="variable">$cars</span>[<span class="number">2</span>][<span class="number">2</span>].<span class="string">&quot;.&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="number">3</span>][<span class="number">0</span>].<span class="string">&quot;: 库存：&quot;</span>.<span class="variable">$cars</span>[<span class="number">3</span>][<span class="number">1</span>].<span class="string">&quot;, 已售：&quot;</span>.<span class="variable">$cars</span>[<span class="number">3</span>][<span class="number">2</span>].<span class="string">&quot;.&lt;br&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>我们还可以在另一个 for 循环内部放置一个 for 循环来获取 $cars 数组的元素（我们仍然需要指向两个索引）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="variable">$row</span> = <span class="number">0</span>; <span class="variable">$row</span> &lt; <span class="number">4</span>; <span class="variable">$row</span>++) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;&lt;b&gt;行号 <span class="subst">$row</span>&lt;/b&gt;&lt;/p&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;ul&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$col</span> = <span class="number">0</span>; <span class="variable">$col</span> &lt; <span class="number">3</span>; <span class="variable">$col</span>++) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;li&gt;&quot;</span>.<span class="variable">$cars</span>[<span class="variable">$row</span>][<span class="variable">$col</span>].<span class="string">&quot;&lt;/li&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;/ul&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="php数组函数"><a href="#php数组函数" class="headerlink" title="php数组函数"></a>php数组函数</h2><p>PHP 提供了一组内置函数，可用于操作数组。</p><p>[详情请看](<a href="https://www.w3school.com.cn/php/php_arrays_functions.asp">PHP 数组函数</a>)</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暴力破解 弱口令</title>
      <link href="/2025/07/21/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%20%E5%BC%B1%E5%8F%A3%E4%BB%A4/"/>
      <url>/2025/07/21/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%20%E5%BC%B1%E5%8F%A3%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><h2 id="适用情况"><a href="#适用情况" class="headerlink" title="适用情况"></a>适用情况</h2><p>暴力无法有效抵抗 对于输入密码没有输入错误上上限等情况</p><h2 id="使用暴力破解破解kali用户密码"><a href="#使用暴力破解破解kali用户密码" class="headerlink" title="使用暴力破解破解kali用户密码"></a>使用暴力破解破解kali用户密码</h2><h3 id="首先使用主机远程控制kali（使用ssh协议）"><a href="#首先使用主机远程控制kali（使用ssh协议）" class="headerlink" title="首先使用主机远程控制kali（使用ssh协议）"></a>首先使用主机远程控制kali（使用ssh协议）</h3><p>使用的是xshell实现</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806174128337.png" alt="image-20250806174128337"></p><h4 id="详细步骤："><a href="#详细步骤：" class="headerlink" title="详细步骤："></a>详细步骤：</h4><p>打开kali虚拟机，在命令行输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start ssh  #打开ssh服务</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status ssh #运行ssh</span><br></pre></td></tr></table></figure><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806174611312.png" alt="image-20250806174611312"></p><p>在这个状态下打开xshell</p><p>新建一个窗口 名称随意但是主机必须是所需要连接的虚拟机的IP地址</p><p>**注：**IP地址通过ifconfig查看</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806174836119.png" alt="image-20250806174836119"></p><p>然后连接成功之后输入用户名和密码即可</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806175115658.png" alt="image-20250806175115658"></p><p>出现如下画面即成功</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806175141885.png" alt="image-20250806175141885"></p><h3 id="接下来在kali里利用自带的hydra进行暴力破解"><a href="#接下来在kali里利用自带的hydra进行暴力破解" class="headerlink" title="接下来在kali里利用自带的hydra进行暴力破解"></a>接下来在kali里利用自带的hydra进行暴力破解</h3><p>1.在kali里创建一个密码字典（因为我们确认攻击的主机的用户名所以只需要密码字典）</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806175421310.png" alt="image-20250806175421310"></p><p>其中有一个是我们的正确密码</p><p>2.使用hydra开始暴力破解</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806175736143.png" alt="image-20250806175736143"></p><p>**注：**具体hydra语法可以使用hydra -help查看</p><h2 id="使用暴力破解破解win10虚拟机的账户密码"><a href="#使用暴力破解破解win10虚拟机的账户密码" class="headerlink" title="使用暴力破解破解win10虚拟机的账户密码"></a>使用暴力破解破解win10虚拟机的账户密码</h2><h3 id="使用远程控制在主机控制win10（rdp协议）"><a href="#使用远程控制在主机控制win10（rdp协议）" class="headerlink" title="使用远程控制在主机控制win10（rdp协议）"></a>使用远程控制在主机控制win10（rdp协议）</h3><p>只需打开win10的远程控制即可</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806181340904.png" alt="image-20250806181340904"></p><p>在本机win+r输入mstsc 打开：<img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806181501547.png" alt="image-20250806181501547"></p><p>然后在虚拟机的cmd中输入ipconfig得到IP地址输入<img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806181556974.png" alt="image-20250806181556974"></p><p>因为我已经连过并且保存了用户名和密码直接连接成功 第一次需要用户名密码<img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806181708422.png" alt="image-20250806181708422"></p><h3 id="使用hydra暴力破解"><a href="#使用hydra暴力破解" class="headerlink" title="使用hydra暴力破解"></a>使用hydra暴力破解</h3><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806182014028.png" alt="image-20250806182014028"></p><p>结果是失败了 但是如果将密码本换成单个密码可以成功 像这样</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806182116765.png" alt="image-20250806182116765"></p><p>我怀疑可能因为Windows密码有试错上限 如果密码本数量再少一点可能可行 我依然使用的kali的密码包字典password.txt</p><h2 id="使用弱口令破解工具"><a href="#使用弱口令破解工具" class="headerlink" title="使用弱口令破解工具"></a>使用弱口令破解工具</h2><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806182435738.png" alt="image-20250806182435738"></p><p>使用方法超级简单 但是需要<strong>VC++ 2010 32位</strong>这个依赖</p><h3 id="应用界面："><a href="#应用界面：" class="headerlink" title="应用界面："></a>应用界面：</h3><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806182623908.png" alt="image-20250806182623908"></p><h3 id="假如使用他来破解我的kali"><a href="#假如使用他来破解我的kali" class="headerlink" title="假如使用他来破解我的kali"></a>假如使用他来破解我的kali</h3><p>目标是IP地址 导入账户和导入密码就是自己创建两个字典 账号和密码 然后开始检查就行 记得要选择协议端口</p><p>kali远程控制是22端口 ssh</p><p>我创建的两个字典：</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806183031403.png" alt="image-20250806183031403"></p><p>导入开始检查 运行结果：</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806183147126.png" alt="image-20250806183147126"></p><p>成功 Windows同理</p><h2 id="John工具"><a href="#John工具" class="headerlink" title="John工具"></a>John工具</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>不仅可以完成暴力破解弱口令等 还可以对各种哈希加密破解MD5 SHA-1等</p><h3 id="操作演示（以MD5为例）："><a href="#操作演示（以MD5为例）：" class="headerlink" title="操作演示（以MD5为例）："></a>操作演示（以MD5为例）：</h3><p>1.首先加密一串明文：123456 得到密文为E10ADC3949BA59ABBE56E057F20F883E</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806183652833.png" alt="image-20250806183652833"></p><p>2.写入kali的一个密码本中，再把明文写入一个字典</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806183838929.png" alt="image-20250806183838929"><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806183947306.png" alt="image-20250806183947306"></p><p>3.使用John破解 注意使用的语法即可</p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20250806184211593.png" alt="image-20250806184211593"></p>]]></content>
      
      
      <categories>
          
          <category> web渗透 网安 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> web渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php核心语法</title>
      <link href="/2025/07/21/php%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2025/07/21/php%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP-代码基本结构"><a href="#PHP-代码基本结构" class="headerlink" title="PHP 代码基本结构"></a>PHP 代码基本结构</h2><h3 id="1-纯PHP文本"><a href="#1-纯PHP文本" class="headerlink" title="1.纯PHP文本"></a>1.纯PHP文本</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 纯PHP文件不需要闭合标签 ?&gt;，可避免输出空白字符</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;这是一个纯PHP文件&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="2-嵌入HTML"><a href="#2-嵌入HTML" class="headerlink" title="2.嵌入HTML"></a>2.嵌入HTML</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;普通HTML内容&lt;/h1&gt;</span><br><span class="line">  &lt;?php</span><br><span class="line">    $name = &quot;张三&quot;;</span><br><span class="line">    echo &quot;&lt;p&gt;动态生成内容：你好，$name！&lt;/p&gt;&quot;;</span><br><span class="line">  ?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="3-短标签（需要配置php-ini）"><a href="#3-短标签（需要配置php-ini）" class="headerlink" title="3.短标签（需要配置php.ini）"></a>3.短标签（需要配置php.ini）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span> <span class="string">&quot;相当于 &lt;?php echo &#x27;内容&#x27;; ?&gt;&quot;</span> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="变量与数据类型"><a href="#变量与数据类型" class="headerlink" title="变量与数据类型"></a>变量与数据类型</h2><h3 id="1-变量规则"><a href="#1-变量规则" class="headerlink" title="1.变量规则"></a>1.变量规则</h3><ul><li>以<code>$</code>开头，区分大小写</li><li>由字母、数字、下划线组成，不能以数字开头</li><li>无需声明类型，赋值时自动确定类型</li></ul><h3 id="2-基本数据类型"><a href="#2-基本数据类型" class="headerlink" title="2.基本数据类型"></a>2.基本数据类型</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符串</span></span><br><span class="line"><span class="variable">$str1</span> = <span class="string">&#x27;单引号字符串&#x27;</span>; <span class="comment">// 单引号不解析变量</span></span><br><span class="line"><span class="variable">$str2</span> = <span class="string">&quot;双引号字符串，可解析变量：<span class="subst">$str1</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数值</span></span><br><span class="line"><span class="variable">$int</span> = <span class="number">123</span>;</span><br><span class="line"><span class="variable">$float</span> = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 布尔值</span></span><br><span class="line"><span class="variable">$isTrue</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$isFalse</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 空值</span></span><br><span class="line"><span class="variable">$empty</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 资源（如文件句柄、数据库连接）</span></span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="3-符合数据类型"><a href="#3-符合数据类型" class="headerlink" title="3.符合数据类型"></a>3.符合数据类型</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组（索引数组）</span></span><br><span class="line"><span class="variable">$colors</span> = [<span class="string">&#x27;红色&#x27;</span>, <span class="string">&#x27;绿色&#x27;</span>, <span class="string">&#x27;蓝色&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$colors</span>[<span class="number">0</span>]; <span class="comment">// 输出：红色</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 关联数组（键值对）</span></span><br><span class="line"><span class="variable">$user</span> = [</span><br><span class="line">  <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;李四&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;age&#x27;</span> =&gt; <span class="number">30</span>,</span><br><span class="line">  <span class="string">&#x27;isAdmin&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$user</span>[<span class="string">&#x27;name&#x27;</span>]; <span class="comment">// 输出：李四</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象（需先定义类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$brand</span> = <span class="string">&#x27;奔驰&#x27;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">drive</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;开车：<span class="subst">&#123;$this-&gt;brand&#125;</span>&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$car</span> = <span class="keyword">new</span> <span class="title class_">Car</span>();</span><br><span class="line"><span class="variable">$car</span>-&gt;<span class="title function_ invoke__">drive</span>(); <span class="comment">// 输出：开车：奔驰</span></span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="1-算数运算符"><a href="#1-算数运算符" class="headerlink" title="1.算数运算符"></a>1.算数运算符</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> + <span class="variable">$b</span>; <span class="comment">// 加法：13</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> % <span class="variable">$b</span>; <span class="comment">// 取余：1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>++;    <span class="comment">// 后自增：先返回10，再+1</span></span><br></pre></td></tr></table></figure><h3 id="2-字符串运算符"><a href="#2-字符串运算符" class="headerlink" title="2.字符串运算符"></a>2.字符串运算符</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str1</span> = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="variable">$str2</span> = <span class="string">&quot;PHP&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str1</span> . <span class="string">&#x27; &#x27;</span> . <span class="variable">$str2</span>; <span class="comment">// 连接：Hello PHP</span></span><br><span class="line"><span class="variable">$str1</span> .= <span class="string">&quot; World&quot;</span>;        <span class="comment">// 追加：Hello World</span></span><br></pre></td></tr></table></figure><h3 id="3-比较运算符"><a href="#3-比较运算符" class="headerlink" title="3.比较运算符"></a>3.比较运算符</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&quot;5&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span> == <span class="variable">$b</span>);  <span class="comment">// 等于：true（只比较值）</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span> === <span class="variable">$b</span>); <span class="comment">// 全等：false（值和类型都要相同）</span></span><br></pre></td></tr></table></figure><h3 id="4-逻辑运算符"><a href="#4-逻辑运算符" class="headerlink" title="4.逻辑运算符"></a>4.逻辑运算符</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$age</span> = <span class="number">25</span>;</span><br><span class="line"><span class="variable">$isStudent</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$age</span> &gt; <span class="number">18</span> &amp;&amp; !<span class="variable">$isStudent</span>) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;成年人且非学生&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-三元运算符（简化版的if-else）"><a href="#5-三元运算符（简化版的if-else）" class="headerlink" title="5.三元运算符（简化版的if-else）"></a>5.三元运算符（简化版的if-else）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$score</span> = <span class="number">85</span>;</span><br><span class="line"><span class="variable">$result</span> = (<span class="variable">$score</span> &gt;= <span class="number">60</span>) ? <span class="string">&quot;及格&quot;</span> : <span class="string">&quot;不及格&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>; <span class="comment">// 输出：及格</span></span><br></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="1-条件语句"><a href="#1-条件语句" class="headerlink" title="1.条件语句"></a>1.条件语句</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if-else</span></span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;H&#x27;</span>); <span class="comment">// 获取当前小时</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$time</span> &lt; <span class="number">12</span>) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;上午好&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="variable">$time</span> &lt; <span class="number">18</span>) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;下午好&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;晚上好&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// switch</span></span><br><span class="line"><span class="variable">$day</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;w&#x27;</span>); <span class="comment">// 获取星期几（0-6）</span></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$day</span>) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;星期日&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;星期六&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;工作日&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-循环语句"><a href="#2-循环语句" class="headerlink" title="2.循环语句"></a>2.循环语句</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for循环（遍历固定次数）</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">5</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;循环第 <span class="subst">$i</span> 次&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// while循环（条件为真时执行）</span></span><br><span class="line"><span class="variable">$i</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$i</span> &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;while循环 <span class="subst">$i</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="variable">$i</span>++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// foreach循环（专门遍历数组）</span></span><br><span class="line"><span class="variable">$users</span> = [<span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;王五&#x27;</span>];</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$users</span> <span class="keyword">as</span> <span class="variable">$index</span> =&gt; <span class="variable">$name</span>) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;索引 <span class="subst">$index</span> 的值是：<span class="subst">$name</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="1-自定义函数"><a href="#1-自定义函数" class="headerlink" title="1.自定义函数"></a>1.自定义函数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 带参数和返回值的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calculate</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$operator</span> = <span class="string">&#x27;+&#x27;</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">switch</span> (<span class="variable">$operator</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>: <span class="keyword">return</span> <span class="variable">$a</span> + <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>: <span class="keyword">return</span> <span class="variable">$a</span> - <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">default</span>: <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">calculate</span>(<span class="number">5</span>, <span class="number">3</span>); <span class="comment">// 8</span></span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">calculate</span>(<span class="number">5</span>, <span class="number">3</span>, <span class="string">&#x27;-&#x27;</span>); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><h3 id="2-变量函数（函数名存储在变量中）"><a href="#2-变量函数（函数名存储在变量中）" class="headerlink" title="2.变量函数（函数名存储在变量中）"></a>2.变量函数（函数名存储在变量中）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;你好！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;sayHello&#x27;</span>;</span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// 调用 sayHello()</span></span><br></pre></td></tr></table></figure><h3 id="3-匿名函数（闭包函数）"><a href="#3-匿名函数（闭包函数）" class="headerlink" title="3.匿名函数（闭包函数）"></a>3.匿名函数（闭包函数）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$greet</span> = <span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;你好，<span class="subst">$name</span>！&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$greet</span>(<span class="string">&quot;小明&quot;</span>); <span class="comment">// 输出：你好，小明！</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
